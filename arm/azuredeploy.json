{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "app": {
      "type": "string",
      "minLength": 3,
      "maxLength": 11
    },
    "storageAcctName": {
      "type": "string",
      "defaultValue": "-",
      "maxLength": 24
    }, 
    "appSvcName": {
      "type": "string",
      "defaultValue": "-",
      "maxLength": 24
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "-",
      "maxLength": 24
    },             
    "storageSKU": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "DOTNETCORE|3.1",
      "metadata": {
        "description": "The Runtime stack of current web app"
      }
    }
  },  
  "variables": {
    "uniqueStorageName": "[if(equals(parameters('storageAcctName'),'-'), concat(parameters('app'), 'svc', uniqueString(resourceGroup().id)), parameters('storageAcctName'))]",
    "appServicePlanName": "[if(equals(parameters('appSvcName'),'-'), concat(parameters('app'), 'stg', uniqueString(resourceGroup().id)), parameters('appSvcName'))]",
    "webAppPortalName": "[if(equals(parameters('webAppName'),'-'), concat(parameters('app'), 'web', uniqueString(resourceGroup().id)), parameters('webAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[variables('uniqueStorageName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageSKU')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S1",
        "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "perSiteScaling": false,
        "reserved": true,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('webAppPortalName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "kind": "app",
      "properties": {
        "sku": "Standard",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
            "linuxFxVersion": "[parameters('linuxFxVersion')]"
          }
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('webAppPortalName'), '/qa')]",
      "location": "South Central US",
      "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]",
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "kind": "app,linux",
      "properties": {
          "enabled": true,
          "hostNameSslStates": [
              {
                  "name": "techexchange-qa.azurewebsites.net",
                  "sslState": "Disabled",
                  "hostType": "Standard"
              },
              {
                  "name": "techexchange-qa.scm.azurewebsites.net",
                  "sslState": "Disabled",
                  "hostType": "Repository"
              }
          ],
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
          "reserved": true,
          "isXenon": false,
          "hyperV": false,
          "siteConfig": {},
          "scmSiteAlsoStopped": false,
          "clientAffinityEnabled": true,
          "clientCertEnabled": false,
          "hostNamesDisabled": false,
          "containerSize": 0,
          "dailyMemoryTimeQuota": 0,
          "httpsOnly": false,
          "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('webAppPortalName'), '/test')]",
      "location": "South Central US",
      "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]",
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "kind": "app,linux",
      "properties": {
          "enabled": true,
          "hostNameSslStates": [
              {
                  "name": "techexchange-test.azurewebsites.net",
                  "sslState": "Disabled",
                  "hostType": "Standard"
              },
              {
                  "name": "techexchange-test.scm.azurewebsites.net",
                  "sslState": "Disabled",
                  "hostType": "Repository"
              }
          ],
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
          "reserved": true,
          "isXenon": false,
          "hyperV": false,
          "siteConfig": {},
          "scmSiteAlsoStopped": false,
          "clientAffinityEnabled": true,
          "clientCertEnabled": false,
          "hostNamesDisabled": false,
          "containerSize": 0,
          "dailyMemoryTimeQuota": 0,
          "httpsOnly": false,
          "redundancyMode": "None"
      }
    }                 
  ],
  "outputs": {
    "storageEndpoint": {
      "type": "object",
      "value": "[reference(variables('uniqueStorageName')).primaryEndpoints]"
    },
    "storageAccountName" : {
      "type": "string",
      "value": "[variables('uniqueStorageName')]"
    }
  }
}